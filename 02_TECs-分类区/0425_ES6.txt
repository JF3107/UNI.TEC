

ECMAScript 2015+（ES6）：
****************************************************************
<<<<<<<< 



<<<<<<<< 0425

“...”是 ES6.扩展运算符：
*********************************************
* 功能：将一个数组转为用逗号分隔的参数序列
* 用法：
① 将一个数组转为用逗号分隔的参数序列，例 ...
② 代替apply方法，例：Math.max.apply(this, [654, 233, 727]) 等于 Math.max(...[654, 233, 727]) 亦即M.m(6,2,7)*
③ 用push将一个数组加至另一个数组的尾部，例：arr1.push(...arr2)
④ 形成\合并数组，例：[...arr]  \  [...arr1, ...arr2, ...arr3]
⑤ 转换“伪数组”成“真数组”，例：[...nisemono_arr] （注意：[...arr]还能用于对数组arr进行“去重”）
⑥ 将字符串转为数组，例：[...'hello']
（⑦，map结构 ... 省略 >> 有兴趣自行了解↓）
资料地址：https://www.cnblogs.com/rlann/p/7222150.html
===========================
** 扩展运算符在对象中的运用：
--------
扩展运算符-对象中运用1 >> 展开符     ...ori：
const ori = {a:1, b:2}
const copy = {...ori, c:3} // copy=>{a:1, b:2, c:3}
----
扩展运算符-对象中运用2 >> 剩余操作符：
(接上"展开符"例)  [ 下例用到了 "解构" ]
const {a, ...rms} = copy // rms=>{b:2, c:3}