

GIT：
****************************************************************
<<<<<<<< 


>>>>>>>>【概念】
没啥好说，直接上"运用"！


>>>>>>>>【命令】
git log                              调取提交日志
git log --pretty=oneline   以"一行"每条的方式展现"commit" 
git branch                       查询本地分支
git branch -r                    查询远程分支
git checkout -b BRANAME        创建并启用新分支


>>>>>>>>【运用】
------------------------------
【8】如何回退本地版本：
① git log / git log --pretty-oneline  查看版本log - 确认要回退的版本号[前几位]
② git reset --hard xxxxxxxx              完成[本地]回退
③ ?如何撤销：git pull重新回到最新版本


【1】如何创建本地分支、改完-推送远程分支：
git branch                  查询本地分支
*********************
git branch -l  查看本地分支
git branch -r  查看远程分支
git branch -a  查看全部分支
*********************
git checkout -b BRANAME                创建并启用新分支
[改 ... status.add.commit.status]       ...
git push --set-upstream origin BRANAME  推送up-stream[第一次推送必要]
   ** mergeRequest并指派
这个在分支的右上角有按钮、点进去填表[指派选项 在其中..]


【2】如何更改git分支名? >> 分三步：
① git branch -m 旧分支名 新分支名          >>>> 本地分支改名.切换到[新名.分支]下
② git push origin :旧分支名                >>>> 删除远程[旧分支]
③ git push --set-upstream origin 新分支名  >>>> 将本地[新(名)分支]推送到远程


【3】如何撤销已经[提交/未提交(已生成)]的commit：
① git log查看日志、找到想合并的提交号(commit_id)。
② git reset --hard commit_id


【4】如何删除分支：
① git branch -D bbbbbb


【5】如何建立（github/gitlab/...）SSH：
①在"user(用户目录[自/本机 86135])"  >> mkdir .ssh （建立 .ssh目录）
②命令## ssh-keygen -t rsa -C "jayfan_k290@126.com"（最好加上 邮件地址-与github账号一致）
（若 github推送[push] 出现错误：[ remote: Permission to xxxxxx.git denied to yyyyyy. zzzzzz-error: 403 ] 时，可先尝试此办法）


【6】报错[ remote: Permission to xxxxxx.git denied to yyyyyy. zzzzzz-error: 403 ]的处理：
（现象...  如下）
////
remote: Permission to JF3107/UNI.TEC.git denied to D3107.
fatal: unable to access 'https://github.com/JF3107/UNI.TEC.git/': The requested URL returned error: 403
    ////
①尝试【5】的解决方案、排除ssh问题
②删除旧windows凭据（github凭据[第一次push时跳出弹框填入]、不删则永久保留）
   原因，第一次push弹框.填错！
   解决步骤：控制面板 - 用户账户 - 管理win凭据 - 普通凭据 - 找到github(目标) - 删！！！


【7】如何设置名字/邮箱、查阅名字/邮箱：
git config --global user.name "xxx" （加 --global，全局；不加：本目录(项目)）
git config --global user.email "xxx" （加 --global，全局；不加：本目录(项目)）
git config user.name
git config user.email



