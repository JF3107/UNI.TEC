



PY-pick（@JQ）：
8888888888888888888888888888888888888888888888888888888888888888888888888
>>>>>>> 



>>>>>>> 0420

#  t=[x**2 for x in range(1,101)]    t是 1-100所有数平方形成的列表>>[1,4,9,16,...,10000]
-----
[ ]，以成列表
x**2, 求x的平方
xx for x in y, 自y迭代出单个x-并对单个x进行运算（以供他用）
range(1,101), 101作为上限、不被采纳。最后一个纳入的数字是100

#  打印时间 [XXX].strftime("%Y-%m-%d")，其中[XXX]是时间对象、%Y-%m-%d是规则

#  条件语句：if  aaa:、elif  bbb:、else。缩进、可嵌套、elif\else可省

#  运算符：<  >  <=  >=  ==  != （这些都懂）；and 和运算；or 或运算；not 非运算。


8888888888888888888888888888888888888888888888888888888888888888888888888
【Q 问题 & 破案】
-----------

【Q1】PYthon中如何"判型"?如何确认"判型结果"?
----
以 [1,2,3] 为例（这是个列表 list）
①type([1,2,3])
②type([1,2,3])==list
**  list, str, int, ...


8888888888888888888888888888888888888888888888888888888888888888888888888
【归档（前-推进 @阮一峰）】
-----------
%%%%

输入/输出 input()/print()

%%%%

中文、编码[可以显示"中文"]：
文件头部（#!/usr/bin下 加）
#coding=utf-8
# -*- coding:utf-8 -*-

%%%%

PYTHON文件的开头：
（适用于 ./*.py 这样的执行方式）<< 文件需要可执行权限: chmod a+x *.py
**  不适用于"python *.py"这样的执行方式
【作用：找寻 python路径】
① #!/usr/bin/python      写死路径
② #!/usr/bin/env python  env路径 -> 取path中指定的第一个python路径

%%%%

PYTHON安装（暂时[0225] 2.7系）
--
环境变量只设置path,待Pycharm
--
CMD用python打开 "PY对话形式"：
① 打开不了 -> 环境变量设置
② 退出, ctrlZ+回车、exit()
